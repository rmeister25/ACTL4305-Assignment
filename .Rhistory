bicopL1
bicopL2
library(ggplot2)
################# Question 8 #############################
set.seed(2025)
fittedX1 <- ecdf(X1)(X1)
fittedX2 <- ecdf(X2)(X2)
selected <- BiCopSelect(fittedX1, fittedX2)
simulatedU <- BiCopSim(n, selected)
bicopX1 <- quantile(X1, probs = simulatedU[, 1], na.rm = TRUE)
bicopX2 <- quantile(X2, probs = simulatedU[, 2], na.rm = TRUE)
bicopL1 <- 1 - exp(bicopX1)
bicopL2 <- 1 - exp(bicopX2)
L2riskMeasures <- findMeasures(bicopL2, alpha)
View(L2riskMeasures)
ggplot(data = bicopL1) +
geom_histogram()
ggplot(data = data.frame(bicopL1)) +
geom_histogram()
data.frame(bicopL1)
simulatedU
bicopX1
data.frame(bicopL1, bicopL2)
ggplot(data = data.frame(bicopL1, bicopL2), mapping = aes(x = bicopL1, y = bicopL2)) +
geom_histogram()
ggplot(data = data.frame(bicopL1, bicopL2), mapping = aes(x = bicopL1, y = bicopL2)) +
geom_histogram(x)
ggplot(data = data.frame(bicopL1, bicopL2), mapping = aes(x = bicopL1)) +
geom_histogram()
bicopL1[bicopL2 >= alpha[1]]
bicopL1
bicopL1[bicopL1 >= alpha[1]]
bicopL1[1]
bicopL1[bicopL1 >= 0]
bicopL1[bicopL1 >= 0.95]
bicopL1[bicopL1 >= 0.1]
bicopL1[bicopL2 >= L2riskMeasures[1]]
bicopL1[bicopL2 >= L2riskMeasures[1, 1]]
L2riskMeasures[1, 1]
View(L2riskMeasures)
L2riskMeasures[, 1]
conditionals <- list()
for (VaR in L2riskMeasures[,1]) {
conditionals <- append(conditionals,
ggplot(data = data.frame(bicopL1[bicopL2 > VaR]), mapping = aes(x = bicopL1)) +
geom_histogram()
)
}
View(conditionals)
for (VaR in L2riskMeasures[,1]) {
conditionals <- append(conditionals,
list(ggplot(data = data.frame(bicopL1[bicopL2 > VaR]), mapping = aes(x = bicopL1)) +
geom_histogram()
))
}
conditionals <- list()
for (VaR in L2riskMeasures[,1]) {
conditionals <- append(conditionals,
list(ggplot(data = data.frame(bicopL1[bicopL2 > VaR]), mapping = aes(x = bicopL1)) +
geom_histogram()
))
}
View(conditionals)
conditionals[[1]]
conditionals <- list()
for (VaR in L2riskMeasures[,1]) {
conditionals <- append(conditionals,
list(ggplot(data = data.frame(bicopL1 = bicopL1[bicopL2 > VaR]), mapping = aes(x = bicopL1)) +
geom_histogram()
))
}
conditionals[[1]]
conditionals[[2]]
conditionals[[3]]
View(tMetrics10)
View(tMetrics3)
View(tMetrics10000)
################# Question 9 #############################
q9VaRMinim <- function(w) {
return(quantile(w * bicopL1 + (1 - w) * bicopL2, probs = 0.95, na.rm = TRUE))
}
q9ESMinim <- function(w) {
bicopL <- w * bicopL1 + (1 - w) * bicopL2
return(mean(bicopL[bicopL >= q9VaRMinim(w)], na.rm = TRUE))
}
q9VarMinim(1/2)
q9VaRMinim(1/2)
q9ESMinim(1/2)
0.5 * c(1, 2)
0.5 %*% c(1, 2)
0.5 * c(1, 2) > c(0, 1)
0.5 %*% c(1, -1) >= c(0, -1)
0.01 %*% c(1, -1) >= c(0, -1)
0 %*% c(1, -1) >= c(0, -1)
0.00001 %*% c(1, -1) >= c(0, -1)
-0.00001 %*% c(1, -1) >= c(0, -1)
1.00001 %*% c(1, -1) >= c(0, -1)
-1.00001 %*% c(1, -1) >= c(0, -1)
1.0000 %*% c(1, -1) >= c(0, -1)
0.9999999 %*% c(1, -1) >= c(0, -1)
return(quantile(w * bicopL1 + (1 - w) * bicopL2, probs = 0.95, na.rm = TRUE))
################# Question 9 #############################
q9VaRMinim <- function(w) {
return(quantile(w * bicopL1 + (1 - w) * bicopL2, probs = 0.95, na.rm = TRUE))
}
q9ESMinim <- function(w) {
bicopL <- w * bicopL1 + (1 - w) * bicopL2
return(mean(bicopL[bicopL >= q9VaRMinim(w)], na.rm = TRUE))
}
q9SharpeRatioMax <- function(w) {
bicopL <- w * bicopL1 + (1 - w) * bicopL2
return(mean(bicopL, na.rm = TRUE) / sd(bicopL, na.rm = TRUE))
}
minVaR <- constrOptim(0.5, q9VaRMinim, ui = c(1, -1), ci = c(0, -1))
c(1, -1) %*% 0.5
t(c(1, -1)) %*% 0.5
rbind(c(1), c(-1))
rbind(c(1), c(-1)) %*% 0.5
matrix(c(1, -1)) %*% 0.5
matrix(c(1, -1)) %*% 0.5 > c(0, -1)
matrix(c(1, -1)) %*% 0.999 > c(0, -1)
matrix(c(1, -1)) %*% 1.01 > c(0, -1)
matrix(c(1, -1)) %*% -0.01 > c(0, -1)
minVaR <- constrOptim(0.5, q9VaRMinim, ui = matrix(c(1, -1)), ci = c(0, -1))
minVaR <- constrOptim(0.5, q9VaRMinim, grad = NULL, ui = matrix(c(1, -1)), ci = c(0, -1))
minVaR <- optimize(q9VarMinim, interval = c(0, 1), maximum = FALSE)
minVaR <- optimize(q9VaRMinim, interval = c(0, 1), maximum = FALSE)
minES <- optimize(q9ESMinim, interval = c(0, 1), maximum = FALSE)
maxSharpe <- optimize(q9SharpeRatioMax, interval = c(0, 1), maximum = TRUE)
View(minVaR)
View(minES)
View(maxSharpe)
maxSharpe[1]
maxSharpe[1] * bicopL1
maxSharpe$maximum
maxSharpe$maximum * bicopL1
maxSharpe$maximum * bicopL1 + (1 - maxSharpe$maximum) * bicopL2
mean(bicopL1)
mean(bicopL2)
mean(maxSharpe$maximum * bicopL1 + (1 - maxSharpe$maximum) * bicopL2)
mean(0.5 * bicopL1 + (1 - 0.5) * bicopL2)
View(maxSharpe)
sd(maxSharpe$maximum * bicopL1 + (1 - maxSharpe$maximum) * bicopL2)
mean(maxSharpe$maximum * bicopL1 + (1 - maxSharpe$maximum) * bicopL2) / sd(maxSharpe$maximum * bicopL1 + (1 - maxSharpe$maximum) * bicopL2)
mean((1 - maxSharpe$maximum) * bicopL2) / sd((1 - maxSharpe$maximum) * bicopL2)
mean(bicopL2) / sd(bicopL2)
mean(0.1 * bicopL1 + (1 - 0.1) * bicopL2) / sd(0.1 * bicopL1 + (1 - 0.1) * bicopL2)
q9ESVaRRatioMax <- function(w) {
return(q9ESMinim(w) / q9VaRMinim(w))
}
maxESVaR <- optimize(q9ESVaRRatioMax, interval = c(0, 1), maximum = TRUE)
View(maxESVaR)
L1metrics
L2metrics
independentLmetrics
probConcordance
probDisconcordance
print(cor(U1_sprmn, U2_sprmn, method = "pearson"))
print(probConcordance - probDisconcordance)
samplecor
data.frame(gaussianSim)
set.seed(2025)
samplecor <- cor(X1, X2, method = "pearson")
covMatrix <- matrix(c(1, samplecor, samplecor, 1), nrow = 2, ncol = 2)
C <- chol(covMatrix)
AZ <- matrix(rnorm(2 * n), ncol = 2) %*% C
U1 <- pnorm(AZ[,1])
U2 <- pnorm(AZ[,2])
gaussianSim <- cbind(U1, U2)
data.frame(gaussianSim)
ggplot(data.frame(gaussianSim), mapping = aes(x = U1, y = U2)) +
geom_point()
ggplot(data.frame(gaussianSim), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.9, color = 'steelblue')
ggplot(data.frame(gaussianSim), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.9, color = 'steelblue') +
labs(title = "Samples Simulated from Gaussian Copula") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data.frame(gaussianSim), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.9, color = 'green') +
labs(title = "Samples Simulated from Gaussian Copula") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data.frame(gaussianSim), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = 'red') +
labs(title = "Samples Simulated from Gaussian Copula") +
theme(plot.title = element_text(hjust = 0.5))
gaussianLmetrics
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = 'red') +
labs(title = "Samples Simulated from Gaussian Copula") +
theme(plot.title = element_text(hjust = 0.5))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = "Samples Simulated from Gaussian Copula") +
theme(plot.title = element_text(hjust = 0.5))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'steelblue')
tMetrics10000 <- q5Measures(10000, 'burlywood1')
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = "Samples Simulated from t Copula") +
theme(plot.title = element_text(hjust = 0.5))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = "Samples Simulated from t Copula") +
theme(plot.title = element_text(hjust = 0.5)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'steelblue')
tMetrics10000 <- q5Measures(10000, 'burlywood1')
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = paste("Samples Simulated from t Copula, df =", toString(nu))) +
theme(plot.title = element_text(hjust = 0.5)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'steelblue')
tMetrics10000 <- q5Measures(10000, 'burlywood1')
names(tSim) <- c("tSim3", "tSim10", "tSim10000")
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = paste("Samples Simulated from t Copula, df =", toString(nu))) +
theme(plot.title = element_text(hjust = 0.5)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'steelblue')
tMetrics10000 <- q5Measures(10000, 'burlywood1')
names(tSim) <- c("tSim3", "tSim10", "tSim10000")
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = paste("Samples Simulated from t Copula, df =", toString(nu))) +
theme(plot.title = element_text(hjust = 0.5, size = 20)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'steelblue')
tMetrics10000 <- q5Measures(10000, 'burlywood1')
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = paste("Samples Simulated from t Copula, df =", toString(nu))) +
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title = element_text(size = 15)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = paste("Samples Simulated from t Copula, df =", toString(nu))) +
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title = element_text(size = 15)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'steelblue')
tMetrics10000 <- q5Measures(10000, 'burlywood1')
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = paste("Samples Simulated from t Copula, df =", toString(nu))) +
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title = element_text(size = 15)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'steelblue')
tMetrics10000 <- q5Measures(10000, 'burlywood1')
################# Question 5 #############################
tSim <- list()
q5Measures <- function(nu, color) {
RNGversion("4.3.0")
set.seed(2025)
V <- rchisq(n, nu)
W <- nu / V
tvals <- AZ * sqrt(W)
U1 <- pt(tvals[,1], nu)
U2 <- pt(tvals[,2], nu)
tSim <<- append(tSim, list(data.frame(U1, U2)))
print(ggplot(data.frame(U1, U2), mapping = aes(x = U1, y = U2)) +
geom_point(alpha = 0.5, color = color) +
labs(title = paste("Samples Simulated from t Copula, df =", toString(nu))) +
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title = element_text(size = 15)))
X1_sim <- quantile(X1, probs = U1, na.rm = TRUE)
X2_sim <- quantile(X2, probs = U2, na.rm = TRUE)
Lt <- 1 - (exp(X1_sim) + exp(X2_sim)) / 2
return(findMeasures(Lt, alpha))
}
tMetrics3 <- q5Measures(3, 'red')
tMetrics10 <- q5Measures(10, 'red')
tMetrics10000 <- q5Measures(10000, 'red')
names(tSim) <- c("tSim3", "tSim10", "tSim10000")
View(tSim)
View(tMetrics3)
View(tMetrics10)
View(tMetrics10000)
View(comonotonicityMetrics)
View(countermonotonicityMetrics)
empiricalMetrics <- findMeasures(1/2 * (L1 + L2), alpha)
View(empiricalMetrics)
View(independentLmetrics)
matrix(X1, X2)
cbind(X1, X2)
empU1 <- ecdf(X1)(X1)
empU2 <- ecdf(X2)(X2)
empiricalProb <- q7ProbMeasures(cbind(empU1, empU2), alpha)
empiricalProb
independentProb
gaussianProb
tProb3
tProb10
tProb10000
comonProb
installed.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("zoo")
install.packages("xts")
install.packages("sp")
install.packages("CASdatasets", repos =
"http://cas.uqam.ca/pub/", type="source")
install.packages("zoo")
install.packages("xts")
install.packages("sp")
install.packages("CASdatasets", repos = "http://cas.uqam.ca/pub/", type="source")
install.packages("rmarkdown")
install.packages("rmarkdown")
install_tinytex()
tinytex::install_tinytex()
install.packages("CASdatasets", repos = "http://cas.uqam.ca/pub/", type="source")
install.packages("zoo")
install.packages("xts")
install.packages("sp")
library(CASdatasets)
install.packages("tiddyverse")
install.packages("tidyverse")
library(readxl)
credit <- read_excel("C:/Users/riyas/Downloads/credit.xls",
skip = 1)
View(credit)
dim(data)
library(data.table)
library(readxl)
library(ggplot2)
library(tidyverse)
library(naniar)
dim(credit)
str(credit)
setwd("~/UNSW Materials/Third Year/Term 3/ACTL4305/Assignment/ACTL4305-Assignment")
read.csv("Cleaned_Destinations_Date_Freely_Data")
read.csv("Cleaned_Destinations_Date_Freely_Data.csv")
read.csv("Freely_quote_data")
read.csv("Freely_quote_data.csv")
setwd("~/UNSW Materials/Third Year/Term 3/ACTL4305/Assignment/ACTL4305-Assignment")
read.csv("Freely_quote_data.csv")
read.csv("Cleaned_Destinations_Date_Freely_Data.csv")
library(ggplot2)
install.packages("vroom")
library(vroom)
read.csv("Cleaned_Destinations_Date_Freely_Data.csv")
read.csv(""~/UNSW Materials/Third Year/Term 3/ACTL4305/Assignment/ACTL4305-Assignment"/Cleaned_Destinations_Date_Freely_Data.csv")
read.csv("~/UNSW Materials/Third Year/Term 3/ACTL4305/Assignment/ACTL4305-Assignment/Cleaned_Destinations_Date_Freely_Data.csv")
read_csv(""~/UNSW Materials/Third Year/Term 3/ACTL4305/Assignment/ACTL4305-Assignment"/Cleaned_Destinations_Date_Freely_Data.csv")
read_csv(""UNSW Materials/Third Year/Term 3/ACTL4305/Assignment/ACTL4305-Assignment"/Cleaned_Destinations_Date_Freely_Data.csv")
read_csv("~/UNSW Materials/Third Year/Term 3/ACTL4305/Assignment/ACTL4305-Assignment"/Cleaned_Destinations_Date_Freely_Data.csv")
m
m
m
m
m
10
